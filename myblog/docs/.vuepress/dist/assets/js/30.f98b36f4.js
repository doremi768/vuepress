(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{383:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"项目概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目概述"}},[t._v("#")]),t._v(" 项目概述")]),t._v(" "),a("p",[t._v("  仿饿了么这个项目较之我之前所练过的demo,是我第一次做的一个较为完整的一个项目（虽然只实现了一部分简单的饿了么的业务逻辑）。由于目前还没有学习后端语言，接口都是使用网上的。对于一些需要后端实现的业务逻辑，我使用的是前端来模拟后台业务逻辑的实现，也导致了一些功能所产生的瑕疵。")]),t._v(" "),a("p",[t._v("  虽然有时候一个细小的问题能困扰我几个小时，甚至一天。比如最开始的短信验证码验证功能，我通过随机数生成验证码，并将手机号，短信验证码存储到 "),a("code",[t._v("localStroge")]),t._v(",由于进行验证，以及增强用户体验。又比如在商品信息板块，通过遍历出右侧商品名称的高度并且存入数组，获取左侧商品分类的滚动对象，然后让她们的索引进行匹配，并且使用了"),a("code",[t._v("better-scroll")]),t._v(",最终实现点击或者滚动使两者联动，等等。但通过这个项目让我扫清了从最开始写静态页面，到学习js，学习vue的诸多疑惑。也让我对基础知识进行了巩固练习，并且增强了我查阅文档的能力。")]),t._v(" "),a("h2",{attrs:{id:"功能板块介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#功能板块介绍"}},[t._v("#")]),t._v(" 功能板块介绍")]),t._v(" "),a("p",[t._v("此项目一共19个页面，如下对它们的功能板块进行说明：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("views\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//此功能板块完成的是从订单产生，到完成模拟支付等一系列的业务逻辑")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Orders            \n    AddAddress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vue\n    MyAddress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vue\n    OrderInfo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vue\n    Pay"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vue\n    Remark"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vue\n    Sttlement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vue\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//此功能板块包括商品的预览，点击商品的展示，评论，商家以及加入购物车，点击去结算等业务逻辑")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Shops            \n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Comments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vue\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Goods"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vue\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Seller"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vue\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Shop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vue\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("ShopCart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vue\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Address"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vue       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取当前地理位置")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("City"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vue          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//可通过城市列表选择其他城市，从而重定向地理位置")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Home"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vue          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//首页，通过定理位置，搜索商品，轮播图，商品展示等组件拼凑而成")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vue         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//根组件")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("login"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vue         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//完成登录等业务逻辑")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Me"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vue            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取登录后的信息，以及对设置收货地址跳转的业务逻辑")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Order"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vue         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//订单完成")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Search"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vue        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//商品搜索")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"技术栈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#技术栈"}},[t._v("#")]),t._v(" 技术栈")]),t._v(" "),a("p",[t._v("在整个项目中使用的技术栈有："),a("br"),t._v("\n1.通过 "),a("code",[t._v("@vue/cli")]),t._v(" 实现的交互式的项目脚手架。")]),t._v(" "),a("p",[t._v("2.使用 "),a("code",[t._v("Vue Router")]),t._v("创建单页应用,具体如下：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("\n此项目中有两个场景用到了："),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("router"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("view"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * 1.在 App.vue 中使用了作为顶层的出口，渲染最高级路由匹配到的组件。\n * 2.在 Shop.vue 中点击导航使得商品，评价，商家这三个组件在当前页面切换显示。\n*/")]),t._v("\n\n编程式的导航\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//在项目中，我通过 $router 访问路由实例。调用:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$router"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/address'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//对于有参数的情况下我会使用一个描述地址的对象：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$router"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'address'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("params"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("city"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("city"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("。\n\n组件内的守卫\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//对于刚才导航到 address.vue 中，然后可以通过组件内导航，将数据传给组件实例：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeRouteEnter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当守卫执行前，组件实例还没创建，所以需要传一个回调给next来访问组件实例")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("vm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" to"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("city"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n全局前置守卫\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//在router/index.js中我通过全局前置守卫使用户未登录时重定向到 /login")]),t._v("\n")])])]),a("p",[t._v("3.使用 "),a("code",[t._v("vuex")]),t._v(" 进行状态管理(具体在第二章)。")]),t._v(" "),a("p",[t._v("4.通过 "),a("code",[t._v("axios")]),t._v(" 获取后端接口")]),t._v(" "),a("p",[t._v("5.使用 "),a("code",[t._v("mint-ui")]),t._v(" 中的 "),a("code",[t._v("Toast")]),t._v("(消息提示框),"),a("code",[t._v("Loadmore")]),t._v("(上/下拉刷新),"),a("code",[t._v("Indicator")]),t._v("(加载提示框),"),a("code",[t._v("Swipe")]),t._v("(轮播图)，等。")]),t._v(" "),a("p",[t._v("6.在实现左侧商品分类和右侧商品详情中使用到了 "),a("code",[t._v("better-scroll")]),t._v(" 中的 "),a("code",[t._v("scrollToElement")]),t._v(" 滚动到目标元素，实现联动。")])])}),[],!1,null,null,null);s.default=e.exports}}]);